server.port = 8200
#server.servlet.context-path = /amppd

# Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
spring.jpa.database = POSTGRESQL
spring.datasource.platform = postgres
spring.datasource.url = 
spring.datasource.username = 
spring.datasource.password = 
#spring.datasource.initialization-mode = always

# Hibernate ddl auto (none, create, create-drop, validate, update), set it to create to initialize an env, then change to update afterwards
spring.jpa.generate-ddl = true
#spring.jpa.hibernate.ddl-auto = create
spring.jpa.hibernate.ddl-auto = update
spring.jpa.show-sql = true 
spring.jpa.properties.hibernate.format_sql = true
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

spring.servlet.multipart.max-file-size = 128KB
spring.servlet.multipart.max-request-size = 128KB
management.endpoints.web.exposure.include = *

logging.level.org.springframework = INFO
logging.level.org.hibernate.type = trace
#logging.level.org.hibernate.SQL = DEBUG
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder = TRACE

amppd.fileStorageRoot = 

galaxy.host =
galaxy.port = 8300
galaxy.username =
galaxy.password =

# Note: 
# Please define the properties with empty values above and fill in the proper values in your local application-${env}.properties file
# under the same directory as applicaton.properties; and set environment variable to specify the environment. For ex:
# 1) The envTarget variable can be set in the OS/environment or as a parameter to the JVM command line: -DenvTarget=dev
# 2) Or it can be specified through mvn build argument: -Dspring.profiles.active=dev 
# Make extra sure that application-${env}.properties is never committed to VCS repository!!

# TODO TO make credentials more secure, we can consider encrypting them using JASYPT with Spring Boot